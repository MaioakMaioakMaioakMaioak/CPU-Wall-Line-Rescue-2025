// ความเร็วมอเตอร์ 0-100
void Examples() {
  motorWrite(50, 50, 50, 50);      //สั่งมอเตอร์ หมุนเดินหน้า motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  motorWrite(-50, -50, -50, -50);  //สั่งมอเตอร์ หมุนถอยหน้า motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  motorWrite(-50, -50, 50, 50);    //สั่งมอเตอร์ หมุนซ้าย motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  motorWrite(50, 50, -50, -50);    //สั่งมอเตอร์ หมุนขวา motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  motorWrite(0, 0, 50, 50);        //สั่งมอเตอร์ เทิร์นซ้าย motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  motorWrite(50, 50, 0, 0);        //สั่งมอเตอร์ เทิร์นขวา motorWrite(ความเร็วมอเตอร์ 1, ความเร็วมอเตอร์ 2, ความเร็วมอเตอร์ 3, ความเร็วมอเตอร์ 4)
  motorStop();                     //สั่งมอเตอร์หยุดทั้ง 4 ตัว
  delay(100);                      //หน่วงเวลา 1000millisecond = 1 วินาที

  FF(100);            //เดินหน้าตรงเรื่อยๆ FF(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  FF(100, 200);       //เดินหน้าตรง นับระยะทาง FF(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที)
  FF(100, 200, 'L');  //เดินหน้าตรง นับระยะทาง FF(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'r' = เทิร์นเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  FF(100, 200, 'r', 175);  //เดินหน้าตรง นับระยะทาง FF(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**
  // 'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  // 'r' = เทิร์นเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**

  BB(100);            //เดินถอยหลังตรงเรื่อยๆ BB(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  BB(100, 200);       //เดินถอยหลังตรง นับระยะทาง BB(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที)
  BB(100, 200, 'L');  //เดินถอยหลังตรง นับระยะทาง BB(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'r' = เทิร์นเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  BB(100, 200, 'r', 175);  //เดินถอยหลังตรง นับระยะทาง BB(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลา 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**
  // 'l' = เทิร์นเลี้ยวซ้ายแล้วหยุด**นับเวลา 1000=1วินาที**
  // 'r' = เทิร์นเลี้ยวขวาแล้วหยุด**นับเวลา 1000=1วินาที**

  SetFront(25);            //เช็ตหน้าตรง เจอเส้นดำ จะหยุด SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  SetFront(25, 200);       //เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที)
  SetFront(25, 200, 'R');  //เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ พร้อมเลี้ยว SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  SetFront(25, 200, 'L', 130);  //เช็ตหน้าตรง เมื่อเจอเส้นดำ จะถอยออกจากเส้นดำ พร้อมเลี้ยว SetFront(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาถอยออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**

  SetBack(25);            //เช็ตหลังตรง เจอเส้นดำ จะหยุด SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว)
  SetBack(25, 200);       //เช็ตหลังตรง เมื่อเจอเส้นดำ จะถอยเดินจากเส้นดำ SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาเดินออกจากเส้นดำ 1000=1วินาที)
  SetBack(25, 200, 'L');  //เช็ตหลังตรง เมื่อเจอเส้นดำ จะถอยเดินจากเส้นดำ พร้อมเลี้ยว SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาเดินออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  SetBack(25, 200, 'R', 130);  //เช็ตหลังตรง เมื่อเจอเส้นดำ จะถอยเดินจากเส้นดำ พร้อมเลี้ยว SetBack(ความเร็วมอเตอร์ทั้ง 4 ตัว, ระยะทางนับเวลาเดินออกจากเส้นดำ 1000=1วินาที, เลือกทิศทางเลี้ยว, ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  // 'L' = หมุนเลี้ยวซ้ายแล้วหยุด**ใช้เซ็นเซอร์ไจโร**
  // 'R' = หมุนเลี้ยวขวาแล้วหยุด**ใช้เซ็นเซอร์ไจโร**

  LL(130);  //หมุนซ้าย LL(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  RR(130);  //หมุนขวา RR(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)

  TL(10, 100, 175);  //เทิร์นซ้าย TL(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  TR(100, 10, 175);  //เทิร์นขวา TR(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)

  TL_B(175);  //ถอยหลัง เทิร์นซ้าย TL_B(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)
  TR_B(175);  //ถอยหลัง เทิร์นขวา TR_B(ระยะองศาเลี้ยว**นับเวลา 1000=1วินาที**)

  spinDegree(-90);  //หมุนซ้าย spinDegree(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  spinDegree(90);   //หมุนขวา spinDegree(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)

  turnDegreeFront(-90);  //เทิร์นซ้าย turnDegreeFront(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  turnDegreeFront(90);   //เทิร์นขวา turnDegreeFront(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)

  turnDegreeBack(-90);  //ถอยหลัง เทิร์นซ้าย turnDegreeBack(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)
  turnDegreeBack(90);   //ถอยหลัง เทิร์นขวา turnDegreeBack(ระยะองศาเลี้ยว**ใช้เซ็นเซอร์ไจโร**)

  DropF();  //เดินหน้าไปหาจุดวางสีเขียว พร้อมวางลูกบาศก์ด้านหน้า
  DropB();  //เดินถอยหลังไปหาจุดวางสีเขียว พร้อมวางลูกบาศก์ด้านหลัง

  ShowValue_Sensor();  //แสดงกราฟค่าของ Sensor ทั้งหมด 8 ตัว
  STOP();              //สั่งหยุด กด SW1 or SW2 เพื่อทำงานต่อ
}